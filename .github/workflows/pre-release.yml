name: Pre-Release Snapshot

on:
  workflow_run:
    workflows: ["build2 stage CI"]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Build2 CI Build ID and Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CI_API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs"
          CI_LOG=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "$CI_API_URL")

          BUILD_ID=$(echo "$CI_LOG" | jq -r '.jobs[].name' | grep -oP '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}' | head -n 1)
          [[ -z "$BUILD_ID" ]] && { echo "Error: Unable to extract build identifier."; exit 1; }

          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV

          VERSION=$(echo "$CI_LOG" | jq -r '.jobs[].steps[].name' | grep -oP '[0-9]+\.[0-9]+\.[0-9]+-[a-zA-Z0-9\.\-]+')
          [[ -z "$VERSION" ]] && { echo "Error: Unable to extract version."; exit 1; }

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Construct Artifact URLs
        run: |
          BASE_CI_URL="https://ci.stage.build2.org/0/bindist"
          PACKAGE="lysis"

          PLATFORMS=(
            "debian/debian11"
            "debian/debian12"
            "fedora/fedora40"
            "fedora/fedora41"
            "archive/macos13.4"
            "archive/windows10"
          )

          ARTIFACT_URLS=()
          for PLATFORM in "${PLATFORMS[@]}"; do
            ARTIFACT_URL="$BASE_CI_URL/$BUILD_ID/$PLATFORM/$PACKAGE/$PACKAGE/$VERSION/"
            ARTIFACT_URLS+=("$ARTIFACT_URL")
          done

          echo "ARTIFACT_URLS=${ARTIFACT_URLS[*]}" >> $GITHUB_ENV

      - name: Download All Binaries (Skipping `packages.sha256`)
        run: |
          mkdir -p release_binaries
          for url in $ARTIFACT_URLS; do
            echo "Fetching: $url"
            FILE_LIST=$(curl -s "$url" | grep -oP 'href="[^"]+"' | cut -d '"' -f 2)

            for file in $FILE_LIST; do
              [[ "$file" == "packages.sha256" ]] && continue  # Skip hash file
              FILENAME=$(basename "$file")
              FULL_URL="$url$FILENAME"
              echo "Downloading $FILENAME"
              curl -L -o "release_binaries/$FILENAME" "$FULL_URL"
            done
          done

      - name: Create GitHub Pre-Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="snapshot-$(date +%Y%m%d-%H%M%S)"
          gh release create "$TAG_NAME" release_binaries/* \
            --title "Pre-Release Snapshot $TAG_NAME" \
            --prerelease
